from tabulate import tabulate


def AND_gate():
    x1 = [0, 0, 1, 1]
    x2 = [0, 1, 0, 1]
    w1 = w2 = [1, 1, 1, 1]
    t = 2
    output = []
    for i in range(len(x1)):
        O = 1 if (x1[i] * w1[i] + x2[i] * w2[i]) >= t else 0
        output.append([x1[i], x2[i], w1[i], w2[i], t, O])
    print("AND Gate")
    print(tabulate(output, headers=["x1", "x2", "w1", "w2", "t", "O"]))

def OR_gate():
    x1 = [0, 0, 1, 1]
    x2 = [0, 1, 0, 1]
    w1 = w2 = [1, 1, 1, 1]
    t = 1
    output = []
    for i in range(len(x1)):
        O = 1 if (x1[i] * w1[i] + x2[i] * w2[i]) >= t else 0
        output.append([x1[i], x2[i], w1[i], w2[i], t, O])
    print("OR Gate")
    print(tabulate(output, headers=["x1", "x2", "w1", "w2", "t", "O"]))

def NOT_gate():
    x = [0, 1]
    w = [-1, -1]
    t = 0
    output = []
    for i in range(len(x)):
        O = 1 if (x[i] * w[i]) >= t else 0
        output.append([x[i], w[i], t, O])
    print("NOT Gate")
    print(tabulate(output, headers=["x", "w", "t", "O"]))

def NAND_gate():
    x1 = [0, 0, 1, 1]
    x2 = [0, 1, 0, 1]
    w1 = w2 = [-1, -1, -1, -1]
    t = -2
    output = []
    for i in range(len(x1)):
        O = 1 if (x1[i] * w1[i] + x2[i] * w2[i]) > t else 0
        output.append([x1[i], x2[i], w1[i], w2[i], t, O])
    print("NAND Gate")
    print(tabulate(output, headers=["x1", "x2", "w1", "w2", "t", "O"]))

def NOR_gate():
    x1 = [0, 0, 1, 1]
    x2 = [0, 1, 0, 1]
    w1 = w2 = [1, 1, 1, 1]
    t = 0
    output = []
    for i in range(len(x1)):
        O = 1 if (x1[i] * w1[i] + x2[i] * w2[i]) <= t else 0
        output.append([x1[i], x2[i], w1[i], w2[i], t, O])
    print("NOR Gate")
    print(tabulate(output, headers=["x1", "x2", "w1", "w2", "t", "O"]))


def EXOR_gate():
    x1 = [0, 0, 1, 1]
    x2 = [0, 1, 0, 1]
    w1 = w2 = w3 = w6 = [1, 1, 1, 1]
    w4 = w5 = [-1, -1, -1, -1]
    t1 = [0.5, 0.5, 0.5, 0.5]
    t2 = [-1.5, -1.5, -1.5, -1.5]
    t3 = [1.5, 1.5, 1.5, 1.5]
    
    def XOR(a, b):
        return 1 if a != b else 0

    output = []
    for i in range(len(x1)):
        O = XOR(x1[i], x2[i])
        output.append([x1[i], x2[i], w1[i], w2[i], w3[i], w4[i], w5[i], w6[i], t1[i], t2[i], t3[i], O])

    print("EXOR Gate")
    print(tabulate(output, headers=["x1", "x2", "w1", "w2", "w3", "w4", "w5", "w6", "t1", "t2", "t3", "O"]))


AND_gate()
print("\n")
OR_gate()
print("\n")
NOT_gate()
print("\n")
NAND_gate()
print("\n")
NOR_gate()
print("\n")
EXOR_gate()
